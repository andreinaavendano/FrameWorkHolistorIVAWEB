{"uid":"a357e30f12688481","name":"reports correcto","fullName":"tests.test_login_plataforma#test_login_plataforma_datos_correctos","historyId":"67fc4dac5fa8606231726955db5b8aae","time":{"start":1729725572930,"stop":1729725581398,"duration":8468},"description":"Este test verifica que se hace el login con los datos correctos y abre la pagina de Dashboard.","descriptionHtml":"<p>Este test verifica que se hace el login con los datos correctos y abre la pagina de Dashboard.</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btn btn-label-brand btn-sm btn-bold\">...</a> is not clickable at point (714, 445). Other element would receive the click: <div _ngcontent-frs-c0=\"\" class=\"overlay ng-tns-c0-4 ng-trigger ng-trigger-fadeIn ng-star-inserted\" style=\"background-color: rgba(0, 0, 0, 0.8); z-index: 99999; position: absolute; opacity: 1;\">...</div>\n  (Session info: chrome=130.0.6723.60)\nStacktrace:\n\tGetHandleVerifier [0x01143853+24035]\n\t(No symbol) [0x010CBBE4]\n\t(No symbol) [0x00FAC2D3]\n\t(No symbol) [0x00FF3B27]\n\t(No symbol) [0x00FF1F89]\n\t(No symbol) [0x00FEFE64]\n\t(No symbol) [0x00FEF45E]\n\t(No symbol) [0x00FE414D]\n\t(No symbol) [0x0100FE8C]\n\t(No symbol) [0x00FE3C04]\n\t(No symbol) [0x01010124]\n\t(No symbol) [0x0102953F]\n\t(No symbol) [0x0100FC26]\n\t(No symbol) [0x00FE218C]\n\t(No symbol) [0x00FE310D]\n\tGetHandleVerifier [0x013E9683+2800659]\n\tGetHandleVerifier [0x0144423E+3172302]\n\tGetHandleVerifier [0x0143CE52+3142626]\n\tGetHandleVerifier [0x011E6C00+692624]\n\t(No symbol) [0x010D4BFD]\n\t(No symbol) [0x010D1908]\n\t(No symbol) [0x010D1AA0]\n\t(No symbol) [0x010C3F50]\n\tBaseThreadInitThunk [0x753DFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7716809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7716806E+238]","statusTrace":"login_plataforma_page = <pages.login_plataforma_page.LoginPlataformaPage object at 0x00000246467BFC80>\n\n    @allure.suite(\"Casos de prueba de la pagina reports de Plataforma\")\n    @allure.epic(\"reports\")\n    @allure.feature(\"Página de reports en Plataforma\")\n    @allure.story(\"US: reports\")\n    @allure.testcase(\"TC - 0007\")\n    @allure.title(\"reports correcto\")\n    @allure.description(\"Este test verifica que se hace el login con los datos correctos y abre la pagina de Dashboard.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.login\n    @pytest.mark.ui\n    def test_login_plataforma_datos_correctos(login_plataforma_page):\n        # declaracion\n        tenan = \"Agenda22022022\"\n        usuario = \"Andreina\"\n        clave = \"123qwe\"\n        with allure.step(\"Navegar en la pagina de inicio de plataforma\"):\n            login_plataforma_page.navegar_login_plataforma()\n    \n        with allure.step(\"Setear los datos correctos en los campos Tenant, Usuario, Contraseña\"):\n            login_plataforma_page.set_user_inputs(tenan, usuario, clave)\n            login_plataforma_page.iniciar_sesion_button()\n    \n        with allure.step(\"Ingresamos en la pagina Dashboard y se muestran los datos del Tenant y usuario\"):\n            tenanEsperado = \"Agenda22022022\"\n            usuarioEsperado = \"Andreina\"\n            assert tenanEsperado in login_plataforma_page.get_tenant_login_ok().text\n            assert usuarioEsperado in login_plataforma_page.get_usuario_login_ok().text\n    \n        with allure.step(\"Log out de la página Dashboard\"):\n            login_plataforma_page.usuario_clic()\n>           login_plataforma_page.log_out()\n\ntests\\test_login_plataforma.py:193: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_plataforma_page.py:99: in log_out\n    self.click(self.SALIR_BUTTON)\npages\\base_page.py:21: in click\n    self.wait_for_element(locator).click()\nTestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nTestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nTestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000246467BEC90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7716809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7716806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btn btn-label-brand btn-sm btn-bold\">...</a> is not clickable at point (714, 445). Other element would receive the click: <div _ngcontent-frs-c0=\"\" class=\"overlay ng-tns-c0-4 ng-trigger ng-trigger-fadeIn ng-star-inserted\" style=\"background-color: rgba(0, 0, 0, 0.8); z-index: 99999; position: absolute; opacity: 1;\">...</div>\nE         (Session info: chrome=130.0.6723.60)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x01143853+24035]\nE       \t(No symbol) [0x010CBBE4]\nE       \t(No symbol) [0x00FAC2D3]\nE       \t(No symbol) [0x00FF3B27]\nE       \t(No symbol) [0x00FF1F89]\nE       \t(No symbol) [0x00FEFE64]\nE       \t(No symbol) [0x00FEF45E]\nE       \t(No symbol) [0x00FE414D]\nE       \t(No symbol) [0x0100FE8C]\nE       \t(No symbol) [0x00FE3C04]\nE       \t(No symbol) [0x01010124]\nE       \t(No symbol) [0x0102953F]\nE       \t(No symbol) [0x0100FC26]\nE       \t(No symbol) [0x00FE218C]\nE       \t(No symbol) [0x00FE310D]\nE       \tGetHandleVerifier [0x013E9683+2800659]\nE       \tGetHandleVerifier [0x0144423E+3172302]\nE       \tGetHandleVerifier [0x0143CE52+3142626]\nE       \tGetHandleVerifier [0x011E6C00+692624]\nE       \t(No symbol) [0x010D4BFD]\nE       \t(No symbol) [0x010D1908]\nE       \t(No symbol) [0x010D1AA0]\nE       \t(No symbol) [0x010C3F50]\nE       \tBaseThreadInitThunk [0x753DFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7716809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7716806E+238]\n\nTestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1729725560043,"stop":1729725563860,"duration":3817},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"login_plataforma_page","time":{"start":1729725572929,"stop":1729725572929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"base_url","time":{"start":1729725572929,"stop":1729725572929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"description":"Este test verifica que se hace el login con los datos correctos y abre la pagina de Dashboard.","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btn btn-label-brand btn-sm btn-bold\">...</a> is not clickable at point (714, 445). Other element would receive the click: <div _ngcontent-frs-c0=\"\" class=\"overlay ng-tns-c0-4 ng-trigger ng-trigger-fadeIn ng-star-inserted\" style=\"background-color: rgba(0, 0, 0, 0.8); z-index: 99999; position: absolute; opacity: 1;\">...</div>\n  (Session info: chrome=130.0.6723.60)\nStacktrace:\n\tGetHandleVerifier [0x01143853+24035]\n\t(No symbol) [0x010CBBE4]\n\t(No symbol) [0x00FAC2D3]\n\t(No symbol) [0x00FF3B27]\n\t(No symbol) [0x00FF1F89]\n\t(No symbol) [0x00FEFE64]\n\t(No symbol) [0x00FEF45E]\n\t(No symbol) [0x00FE414D]\n\t(No symbol) [0x0100FE8C]\n\t(No symbol) [0x00FE3C04]\n\t(No symbol) [0x01010124]\n\t(No symbol) [0x0102953F]\n\t(No symbol) [0x0100FC26]\n\t(No symbol) [0x00FE218C]\n\t(No symbol) [0x00FE310D]\n\tGetHandleVerifier [0x013E9683+2800659]\n\tGetHandleVerifier [0x0144423E+3172302]\n\tGetHandleVerifier [0x0143CE52+3142626]\n\tGetHandleVerifier [0x011E6C00+692624]\n\t(No symbol) [0x010D4BFD]\n\t(No symbol) [0x010D1908]\n\t(No symbol) [0x010D1AA0]\n\t(No symbol) [0x010C3F50]\n\tBaseThreadInitThunk [0x753DFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7716809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7716806E+238]","statusTrace":"login_plataforma_page = <pages.login_plataforma_page.LoginPlataformaPage object at 0x00000246467BFC80>\n\n    @allure.suite(\"Casos de prueba de la pagina reports de Plataforma\")\n    @allure.epic(\"reports\")\n    @allure.feature(\"Página de reports en Plataforma\")\n    @allure.story(\"US: reports\")\n    @allure.testcase(\"TC - 0007\")\n    @allure.title(\"reports correcto\")\n    @allure.description(\"Este test verifica que se hace el login con los datos correctos y abre la pagina de Dashboard.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.login\n    @pytest.mark.ui\n    def test_login_plataforma_datos_correctos(login_plataforma_page):\n        # declaracion\n        tenan = \"Agenda22022022\"\n        usuario = \"Andreina\"\n        clave = \"123qwe\"\n        with allure.step(\"Navegar en la pagina de inicio de plataforma\"):\n            login_plataforma_page.navegar_login_plataforma()\n    \n        with allure.step(\"Setear los datos correctos en los campos Tenant, Usuario, Contraseña\"):\n            login_plataforma_page.set_user_inputs(tenan, usuario, clave)\n            login_plataforma_page.iniciar_sesion_button()\n    \n        with allure.step(\"Ingresamos en la pagina Dashboard y se muestran los datos del Tenant y usuario\"):\n            tenanEsperado = \"Agenda22022022\"\n            usuarioEsperado = \"Andreina\"\n            assert tenanEsperado in login_plataforma_page.get_tenant_login_ok().text\n            assert usuarioEsperado in login_plataforma_page.get_usuario_login_ok().text\n    \n        with allure.step(\"Log out de la página Dashboard\"):\n            login_plataforma_page.usuario_clic()\n>           login_plataforma_page.log_out()\n\ntests\\test_login_plataforma.py:193: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_plataforma_page.py:99: in log_out\n    self.click(self.SALIR_BUTTON)\npages\\base_page.py:21: in click\n    self.wait_for_element(locator).click()\nTestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nTestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nTestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000246467BEC90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7716809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7716806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btn btn-label-brand btn-sm btn-bold\">...</a> is not clickable at point (714, 445). Other element would receive the click: <div _ngcontent-frs-c0=\"\" class=\"overlay ng-tns-c0-4 ng-trigger ng-trigger-fadeIn ng-star-inserted\" style=\"background-color: rgba(0, 0, 0, 0.8); z-index: 99999; position: absolute; opacity: 1;\">...</div>\nE         (Session info: chrome=130.0.6723.60)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x01143853+24035]\nE       \t(No symbol) [0x010CBBE4]\nE       \t(No symbol) [0x00FAC2D3]\nE       \t(No symbol) [0x00FF3B27]\nE       \t(No symbol) [0x00FF1F89]\nE       \t(No symbol) [0x00FEFE64]\nE       \t(No symbol) [0x00FEF45E]\nE       \t(No symbol) [0x00FE414D]\nE       \t(No symbol) [0x0100FE8C]\nE       \t(No symbol) [0x00FE3C04]\nE       \t(No symbol) [0x01010124]\nE       \t(No symbol) [0x0102953F]\nE       \t(No symbol) [0x0100FC26]\nE       \t(No symbol) [0x00FE218C]\nE       \t(No symbol) [0x00FE310D]\nE       \tGetHandleVerifier [0x013E9683+2800659]\nE       \tGetHandleVerifier [0x0144423E+3172302]\nE       \tGetHandleVerifier [0x0143CE52+3142626]\nE       \tGetHandleVerifier [0x011E6C00+692624]\nE       \t(No symbol) [0x010D4BFD]\nE       \t(No symbol) [0x010D1908]\nE       \t(No symbol) [0x010D1AA0]\nE       \t(No symbol) [0x010C3F50]\nE       \tBaseThreadInitThunk [0x753DFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7716809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7716806E+238]\n\nTestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Navegar en la pagina de inicio de plataforma","time":{"start":1729725572930,"stop":1729725573195,"duration":265},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"Setear los datos correctos en los campos Tenant, Usuario, Contraseña","time":{"start":1729725573195,"stop":1729725575602,"duration":2407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"Ingresamos en la pagina Dashboard y se muestran los datos del Tenant y usuario","time":{"start":1729725575602,"stop":1729725579935,"duration":4333},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"Log out de la página Dashboard","time":{"start":1729725579935,"stop":1729725581398,"duration":1463},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btn btn-label-brand btn-sm btn-bold\">...</a> is not clickable at point (714, 445). Other element would receive the click: <div _ngcontent-frs-c0=\"\" class=\"overlay ng-tns-c0-4 ng-trigger ng-trigger-fadeIn ng-star-inserted\" style=\"background-color: rgba(0, 0, 0, 0.8); z-index: 99999; position: absolute; opacity: 1;\">...</div>\n  (Session info: chrome=130.0.6723.60)\nStacktrace:\n\tGetHandleVerifier [0x01143853+24035]\n\t(No symbol) [0x010CBBE4]\n\t(No symbol) [0x00FAC2D3]\n\t(No symbol) [0x00FF3B27]\n\t(No symbol) [0x00FF1F89]\n\t(No symbol) [0x00FEFE64]\n\t(No symbol) [0x00FEF45E]\n\t(No symbol) [0x00FE414D]\n\t(No symbol) [0x0100FE8C]\n\t(No symbol) [0x00FE3C04]\n\t(No symbol) [0x01010124]\n\t(No symbol) [0x0102953F]\n\t(No symbol) [0x0100FC26]\n\t(No symbol) [0x00FE218C]\n\t(No symbol) [0x00FE310D]\n\tGetHandleVerifier [0x013E9683+2800659]\n\tGetHandleVerifier [0x0144423E+3172302]\n\tGetHandleVerifier [0x0143CE52+3142626]\n\tGetHandleVerifier [0x011E6C00+692624]\n\t(No symbol) [0x010D4BFD]\n\t(No symbol) [0x010D1908]\n\t(No symbol) [0x010D1AA0]\n\t(No symbol) [0x010C3F50]\n\tBaseThreadInitThunk [0x753DFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7716809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7716806E+238]\n\n","statusTrace":"  File \"F:\\Projects\\Selenium\\SeleniumPython\\FrameWorkHolistorIVAWEB\\tests\\test_login_plataforma.py\", line 193, in test_login_plataforma_datos_correctos\n    login_plataforma_page.log_out()\n  File \"F:\\Projects\\Selenium\\SeleniumPython\\FrameWorkHolistorIVAWEB\\pages\\login_plataforma_page.py\", line 99, in log_out\n    self.click(self.SALIR_BUTTON)\n  File \"F:\\Projects\\Selenium\\SeleniumPython\\FrameWorkHolistorIVAWEB\\pages\\base_page.py\", line 21, in click\n    self.wait_for_element(locator).click()\n  File \"F:\\Projects\\Selenium\\SeleniumPython\\FrameWorkHolistorIVAWEB\\TestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"F:\\Projects\\Selenium\\SeleniumPython\\FrameWorkHolistorIVAWEB\\TestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"F:\\Projects\\Selenium\\SeleniumPython\\FrameWorkHolistorIVAWEB\\TestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"F:\\Projects\\Selenium\\SeleniumPython\\FrameWorkHolistorIVAWEB\\TestEnv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":4},"afterStages":[{"name":"browser::0","time":{"start":1729725603172,"stop":1729725605520,"duration":2348},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"epic","value":"reports"},{"name":"severity","value":"normal"},{"name":"suite","value":"Casos de prueba de la pagina reports de Plataforma"},{"name":"feature","value":"Página de reports en Plataforma"},{"name":"story","value":"US: reports"},{"name":"tag","value":"ui"},{"name":"tag","value":"login"},{"name":"parentSuite","value":"tests"},{"name":"host","value":"DESA03"},{"name":"thread","value":"20860-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_plataforma"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"TC - 0007","url":"TC - 0007","type":"tms"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["ui","login"]},"source":"a357e30f12688481.json","parameterValues":[]}